/*
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
*/
/*
	Created on : 25 mars 2015, 17:51:16
	Author     : HL
*/

@charset "UTF-8";

.f-left
{
	float: left;
}

.f-right
{
	float: right;
}

.TabbedPanels {
	overflow: visible;
	margin: 0px;
	padding: 0px;
	clear: none;
	width: 100%; /* IE Hack to force proper layout when preceded by a paragraph. (hasLayout Bug)*/
}

.TabbedPanelsTabGroup {
	margin: 0px;
	padding: 0px;
}

.TabbedPanelsTab {
	position: relative;
	top: 1px;
	float: left;
	padding: 10px 10px;
	/* font: bold 0.7em sans-serif; */
	background-color: #fafafa;
	list-style: none;
	border-bottom: solid 1px #ddd;
	border-top: solid 1px #ddd;
	-moz-user-select: none;
	-khtml-user-select: none;
	cursor: pointer;
	/*min-width: 120px;*/
		margin-bottom: 0;
		font-weight: bold;
		text-transform: uppercase;
}

.TabbedPanelsTab.TabbedPanelsTabSelected
{
	border-left: solid 1px #ddd;
	border-right: solid 1px #ddd;
}

.TabbedPanelsTab:first-of-type:not(.TabbedPanelsTabSelected)
{
	border-left: solid 1px #ddd;
}

.TabbedPanelsTab:not(.TabbedPanelsTabSelected)
{
	border-right: solid 1px #ddd;
}

.TabbedPanelsTab.TabbedPanelsTabSelected:not(:first-of-type)
{
	margin-left: -1px;
}

.TabbedPanelsTab.TabbedPanelsTabSelected + li
{
	border-left: none;
	border-right: solid 1px #ddd;
}

.TabbedPanelsTab:focus
{
	outline: none;
}

.TabbedPanelsTab:hover
{
	background-color: #eee;
}

/* This selector is an example of how to change the appearnce of a tab button
 * container as the mouse enters it. The class "TabbedPanelsTabHover" is
 * programatically added and removed from the tab element as the mouse enters
 * and exits the container.
 */
.TabbedPanelsTabHover {
	background-color: #ddd;
}

/* This selector is an example of how to change the appearance of a tab button
 * container after the user has clicked on it to activate a content panel.
 * The class "TabbedPanelsTabSelected" is programatically added and removed
 * from the tab element as the user clicks on the tab button containers in
 * the widget.
 *
 * As mentioned above, for our default style, tab buttons are positioned
 * 1 pixel down from where it would normally render. When the tab button is
 * selected, we change its bottom border to match the background color of the
 * content panel so that it looks like the tab is part of the content panel.
 */
.TabbedPanelsTabSelected {
	background-color: white !important;
	border-bottom: none;
	padding-top: 15px;
	padding-bottom: 15px;
	margin-top: -9px;
}

/* This selector is an example of how to make a link inside of a tab button
 * look like normal text. Users may want to use links inside of a tab button
 * so that when it gets focus, the text *inside* the tab button gets a focus
 * ring around it, instead of the focus ring around the entire tab.
 */
.TabbedPanelsTab a {
	color: black;
	text-decoration: none;
}

/* This is the selector for the ContentGroup. The ContentGroup container houses
 * all of the content panels for each tabbed panel in the widget. For our
 * default style, this container provides the background color and borders that
 * surround the content.
 *
 * The name of the class ("TabbedPanelsContentGroup") used in this selector is
 * not necessary to make the widget function. You can use any class name you
 * want to style the ContentGroup container.
 */
.TabbedPanelsContentGroup {
	background-color: white;
	clear: both;
	border-left: solid 1px #ddd;
	border-bottom: solid 1px #ddd;
	border-top: solid 1px #ddd;
	border-right: solid 1px #ddd;
	/*background-color: #EEE;*/
}

/* This is the selector for the Content panel. The Content panel holds the
 * content for a single tabbed panel. For our default style, this container
 * provides some padding, so that the content is not pushed up against the
 * widget borders.
 *
 * The name of the class ("TabbedPanelsContent") used in this selector is
 * not necessary to make the widget function. You can use any class name you
 * want to style the Content container.
 */
.TabbedPanelsContent {
	overflow: hidden;
	padding: 10px;
		background: white;
		border: solid 1px #ddd;
}

/* This selector is an example of how to change the appearnce of the currently
 * active container panel. The class "TabbedPanelsContentVisible" is
 * programatically added and removed from the content element as the panel
 * is activated/deactivated.
 */
.TabbedPanelsContentVisible {
}

/* Vertical Tabbed Panels
 *
 * The following rules override some of the default rules above so that the
 * TabbedPanels widget renders with its tab buttons along the left side of
 * the currently active content panel.
 *
 * With the rules defined below, the only change that will have to be made
 * to switch a horizontal tabbed panels widget to a vertical tabbed panels
 * widget, is to use the "VTabbedPanels" class on the top-level widget
 * container element, instead of "TabbedPanels".
 */

.VTabbedPanels {
	overflow: hidden;
	zoom: 1;
}

/* This selector floats the TabGroup so that the tab buttons it contains
 * render to the left of the active content panel. A border is drawn around
 * the group container to make it look like a list container.
 */
.VTabbedPanels .TabbedPanelsTabGroup {
	float: left;
	width: 10em;
	height: 20em;
	background-color: #EEE;
	position: relative;
	border-top: solid 1px #ddd;
	border-right: solid 1px #ddd;
	border-left: solid 1px #ddd;
	border-bottom: solid 1px #ddd;
}

/* This selector disables the float property that is placed on each tab button
 * by the default TabbedPanelsTab selector rule above. It also draws a bottom
 * border for the tab. The tab button will get its left and right border from
 * the TabGroup, and its top border from the TabGroup or tab button above it.
 */
.VTabbedPanels .TabbedPanelsTab {
	float: none;
	margin: 0px;
	border-top: none;
	border-left: none;
	border-right: none;
}

/* This selector disables the float property that is placed on each tab button
 * by the default TabbedPanelsTab selector rule above. It also draws a bottom
 * border for the tab. The tab button will get its left and right border from
 * the TabGroup, and its top border from the TabGroup or tab button above it.
 */
.VTabbedPanels .TabbedPanelsTabSelected {
	background-color: #EEE;
	border-bottom: solid 1px #ddd;
}

/* This selector floats the content panels for the widget so that they
 * render to the right of the tabbed buttons.
 */
.VTabbedPanels .TabbedPanelsContentGroup {
	clear: none;
	float: left;
	padding: 0px;
	width: 30em;
	height: 20em;
}

/* Styles for Printing */
@media print {
.TabbedPanels {
	overflow: visible !important;
}
.TabbedPanelsContentGroup {
	display: block !important;
	overflow: visible !important;
	height: auto !important;
}
.TabbedPanelsContent {
	overflow: visible !important;
	display: block !important;
	clear:both !important;
}
.TabbedPanelsTab {
	 overflow: visible !important;
	 display: block !important;
	 clear:both !important;
}
}


/*Accordion*/
.Accordion {
	border-left: solid 1px gray;
	border-right: solid 1px black;
	border-bottom: solid 1px gray;
	overflow: hidden;
}

.AccordionPanel {
	margin: 0px;
	padding: 0px;
}

.AccordionPanelTab {
	background-color: #CCCCCC;
	border-top: solid 1px black;
	border-bottom: solid 1px gray;
	margin: 0px;
	padding: 2px;
	cursor: pointer;
	-moz-user-select: none;
	-khtml-user-select: none;
}

.AccordionPanelContent {
	overflow: auto;
	margin: 0px;
	padding: 0px;
	height: 200px;
}

.AccordionPanelOpen .AccordionPanelTab {
	/*background-color: #EEEEEE;*/
	background: #4b8dda;
	color:#fff;
}

.AccordionPanelTabHover {
	/*color: #555555;*/
	color:#fff;
}
.AccordionPanelOpen .AccordionPanelTabHover {
	/*color: #555555;*/
	color:#fff;
}

.AccordionFocused .AccordionPanelTab {
	/*background-color: #3399FF;*/
	background: #4b8dda;
	color:#fff;
}

.AccordionFocused .AccordionPanelOpen .AccordionPanelTab {
	/*background-color: #4F71B9;
	color: white;*/
	background: #4b8dda;
	color:#fff;
}

.Accordion{
	border-radius: 5px;
	border: 1px solid #d0d0d0;
	outline: none;
}
.Accordion .AccordionPanelTab{
	display: block;
	padding:10px;
	font-size: 14px;
	font-weight: bold;
	color:#4f71b9;
	background-color: #fff;
	/*background-position: 10px center;*/
	background-size: 22px;
	background-repeat: no-repeat;
	cursor:pointer;
	border-top: solid 1px transparent;
	border-bottom: solid 1px #d0d0d0;
}
.Accordion .AccordionPanelTab:hover{
	/*background-color: #4f71b9;*/
	color:#fff;
	background:#4b8dda;
}
.Accordion > .AccordionPanel.AccordionPanelClosed:last-child > .AccordionPanelTab,
.Accordion > .AccordionPanel:last-child > .AccordionPanelContent
{
	border-bottom:none;
}
.Accordion .AccordionPanelContent{
	padding:10px;
	height: auto;
	overflow: hidden;
	border-bottom: 1px solid #d0d0d0;
}

/*Minimal*/
.Accordion.minimal
{
	border-radius: 0;
}
.Accordion.minimal .AccordionPanelTab
{
	padding: 5px;
   /* color: #444;*/
	font-weight: normal;
	font-size: 14px;
	position: relative;
	/*color:#fff;*/
	/*background: #4b8dda;*/
}
.Accordion.minimal .AccordionPanelTab:hover{
	color:#fff;
}
.Accordion.minimal .AccordionPanelTab:before, .Accordion.minimal .AccordionPanelTab:after
{
	content: '';
	position: absolute;
	/*background-color: #4f71b9;*/
	background: #4b8dda;
}

.Accordion.minimal .AccordionPanelTab.AccordionPanelTabHover:before, .Accordion.minimal .AccordionPanelTab.AccordionPanelTabHover:after
{
	background-color: white;
}

.Accordion.minimal .AccordionPanelTab:before {
  right: 10px;
  margin-left: -1px;
  top: 7px;
  width: 2px;
  height: 15px;

}
.Accordion.minimal .AccordionPanelOpen .AccordionPanelTab{
	background: #4b8dda;
	color:#fff;
}
.Accordion.minimal .AccordionPanelOpen .AccordionPanelTab:before
{
	display: none;
}

.Accordion.minimal .AccordionPanelTab:after {
  top: 15px;
  right: 4px;
  margin-top: -1px;
  width: 15px;
  height: 2px;
}
/* Rules for Printing */

@media print {

	.Accordion {
		overflow: visible !important;
	}

	.AccordionPanelContent {
		display: block !important;
		overflow: visible !important;
		height: auto !important;
	}
}

/* Vertical Tabbed Panels
 *
 * The following rules override some of the default rules above so that the
 * TabbedPanels widget renders with its tab buttons along the left side of
 * the currently active content panel.
 *
 * With the rules defined below, the only change that will have to be made
 * to switch a horizontal tabbed panels widget to a vertical tabbed panels
 * widget, is to use the "VTabbedPanels" class on the top-level widget
 * container element, instead of "TabbedPanels".
 */

.VTabbedPanels {
	overflow: hidden;
	zoom: 1;
}

/* This selector floats the TabGroup so that the tab buttons it contains
 * render to the left of the active content panel. A border is drawn around
 * the group container to make it look like a list container.
 */
.VTabbedPanels .TabbedPanelsTabGroup {
	float: left;
	width: 10em;
	height: 20em;
	background-color: #EEE;
	position: relative;
	border-top: solid 1px #999;
	border-right: solid 1px #999;
	border-left: solid 1px #CCC;
	border-bottom: solid 1px #CCC;
}

/* This selector disables the float property that is placed on each tab button
 * by the default TabbedPanelsTab selector rule above. It also draws a bottom
 * border for the tab. The tab button will get its left and right border from
 * the TabGroup, and its top border from the TabGroup or tab button above it.
 */
.VTabbedPanels .TabbedPanelsTab {
	float: none;
	margin: 0px;
	border-top: none;
	border-left: none;
	border-right: none;
}

/* This selector disables the float property that is placed on each tab button
 * by the default TabbedPanelsTab selector rule above. It also draws a bottom
 * border for the tab. The tab button will get its left and right border from
 * the TabGroup, and its top border from the TabGroup or tab button above it.
 */
.VTabbedPanels .TabbedPanelsTabSelected {
	background-color: #EEE;
	border-bottom: solid 1px #999;
}

/* This selector floats the content panels for the widget so that they
 * render to the right of the tabbed buttons.
 */
.VTabbedPanels .TabbedPanelsContentGroup {
	clear: none;
	float: left;
	padding: 0px;
	width: 30em;
	height: 20em;
}

.block-form .label
{
	background-color: #F9F9F9;
	width: 20%;
	font-weight: bold;
}

.block-form .o-desc, .o-wrap > label
{
	font-weight: normal;
	line-height: 16px;
	color: #899194;
	font-size: 12px;
}

.mg-top
{
	margin-top: 10px !important;
}

.mg-left
{
	margin-left: 10px;
}

.mg-left
{
	margin-left: 10px;
}

.no-bd-top
{
	border-top: none !important;
}

.no-bd-bot
{
	border-bottom: none !important;
}

.o-loading
{
	background: url(../images/spinner.gif) center center no-repeat;
	width: 20px;
	height: 24px;
}

.remove-rf-row
{
	background: url(../images/sprite.png) -66px -116px no-repeat #fff;
	display: block;
	height: 18px;
	width: 18px;
	border-radius: 9px;
	box-shadow: 0 0 3px rgba(0, 0, 0, 0.3);
}

.remove-rf-row:hover
{
	background: url(../images/sprite.png) -66px -166px no-repeat #fff;
}

.media-preview
{
	display: inline-block;
}

.media-preview img
{
	max-width: 50px;
	max-height: 50px;
}
.table-fixed-layout
{
	table-layout: fixed;
	width: 100%;
	margin-top: 13px;
}

.table-fixed-layout input, .table-fixed-layout textarea, .table-fixed-layout select
{
	max-width: 100%;
}
.o-metabox-container input[type=text], .o-metabox-container textarea, .o-metabox-container select
{
	width: 100% !important;
}
input[type=text].o-color {
	/*border: 0px solid #ddd;*/
	border: none;
	border-left: 35px solid #5893ff;
	background: #fff !important;
	/*box-shadow: none !important;*/
	border-radius: 3px;
	display: inline-block;
	/*width:80% !important;*/
	box-shadow: inset 0px 0px 5px #ccc;

}
.o-color-btn{
	display: inline-block;
	height: 100%;
	width: 30px;
	/*margin-left: 10px;
	vertical-align: middle;
	float: right;*/
	background: transparent url(../images/esprit3.png) no-repeat -337px -932px;
	border-radius: 3px;
	position: absolute;
	top: 0;
	right: 0;
}
.o-color-container
{
	display: inline-block;
	width: 100%;
	position: relative;
}
.o-wrap label>input[type="text"]
{
	width: 100%;
}
